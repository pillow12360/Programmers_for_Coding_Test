# 0919 화요일 인프런 DP 개요

# 문제에 대한 정답이 될 가능성이 있는 모든 해결책을 "체계적"이고 "효율적"으로 탐색하는 풀이법

# 모든 해결책을 탐색하는 풀이 = 완전탐색 

# 완전탐색은 체계 x 효율 x 

# 완전 탐색에서 진화한 결과


# 1. 크고 복잡한 문제를 작은 문제로 나눈다. (subproblem - 하위문제)

# 2. 하위 문제의 답을 계산한다.
# 여기서 중복 계산해야 하는 하위 문제가 있다. (overlapping subproblem)

# 한번 계산한 결과는 메모리에 저장하여 재계산 하지 않도록 한다.

# 하위 문제에 대한 답을 통해 원래 문제에 대한 답을 계산 (optimal substructure - 최적 부분 구조)

# 예시문제 피보나치 수열

# 1. 완전탐색 (재귀)

# n-2 번째 n -1 번째 n 번째의 관계식을 : recurrence relation

def fibo(n):
  if n == 1 or n==2:
    return 1
  return fibo(n-2) + fibo(n-1)

print(fibo(8))
